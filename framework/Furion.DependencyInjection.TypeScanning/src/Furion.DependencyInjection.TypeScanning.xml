<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.DependencyInjection.TypeScanning</name>
    </assembly>
    <members>
        <member name="T:Furion.DependencyInjection.DependencyAttribute">
            <summary>
            依赖关系配置特性
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.DependencyAttribute.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.DependencyAttribute"/>
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.DependencyAttribute.#ctor(Furion.DependencyInjection.ServiceAddition)">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.DependencyAttribute"/>
            </summary>
            <param name="addition"><see cref="T:Furion.DependencyInjection.ServiceAddition"/></param>
        </member>
        <member name="P:Furion.DependencyInjection.DependencyAttribute.Addition">
            <inheritdoc cref="T:Furion.DependencyInjection.ServiceAddition"/>
        </member>
        <member name="P:Furion.DependencyInjection.DependencyAttribute.Ignore">
            <summary>
            忽略注册
            </summary>
        </member>
        <member name="P:Furion.DependencyInjection.DependencyAttribute.Order">
            <summary>
            排序
            </summary>
            <remarks>值越大则注册越晚</remarks>
        </member>
        <member name="P:Furion.DependencyInjection.DependencyAttribute.IncludeSelf">
            <summary>
            包含自身服务
            </summary>
        </member>
        <member name="P:Furion.DependencyInjection.DependencyAttribute.IncludeBase">
            <summary>
            包含基类服务
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute">
            <summary>
            服务导出配置
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute"/>
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute.#ctor(System.Type[])">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute"/>
            </summary>
            <param name="serviceTypes"><see cref="P:Furion.DependencyInjection.ExposeServicesAttribute.ServiceTypes"/></param>
        </member>
        <member name="P:Furion.DependencyInjection.ExposeServicesAttribute.ServiceTypes">
            <summary>
            类型集合
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`1">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`1.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`1"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`2">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`2.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`2"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`3">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`3.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`3"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`4">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
            <typeparam name="TService4">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`4.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`4"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`5">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
            <typeparam name="TService4">服务类型</typeparam>
            <typeparam name="TService5">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`5.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`5"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`6">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
            <typeparam name="TService4">服务类型</typeparam>
            <typeparam name="TService5">服务类型</typeparam>
            <typeparam name="TService6">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`6.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`6"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`7">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
            <typeparam name="TService4">服务类型</typeparam>
            <typeparam name="TService5">服务类型</typeparam>
            <typeparam name="TService6">服务类型</typeparam>
            <typeparam name="TService7">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`7.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`7"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ExposeServicesAttribute`8">
            <summary>
            服务导出配置
            </summary>
            <typeparam name="TService1">服务类型</typeparam>
            <typeparam name="TService2">服务类型</typeparam>
            <typeparam name="TService3">服务类型</typeparam>
            <typeparam name="TService4">服务类型</typeparam>
            <typeparam name="TService5">服务类型</typeparam>
            <typeparam name="TService6">服务类型</typeparam>
            <typeparam name="TService7">服务类型</typeparam>
            <typeparam name="TService8">服务类型</typeparam>
        </member>
        <member name="M:Furion.DependencyInjection.ExposeServicesAttribute`8.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.ExposeServicesAttribute`8"/>
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder">
            <summary>
            依赖注入模块构建器
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder._dependencyType">
            <summary>
            服务依赖注入接口类型
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder._assemblies">
            <summary>
            待扫描的程序集集合
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder._serviceTypeBlacklist">
            <summary>
            服务类型黑名单
            </summary>
            <remarks>禁止已扫描的服务类型作为服务注册</remarks>
        </member>
        <member name="F:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder._filterConfigure">
            <summary>
            服务描述器过滤器
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder"/>
            </summary>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.SuppressAssemblyScanning">
            <summary>
            禁用程序集扫描
            </summary>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.SuppressNonPublicType">
            <summary>
            禁用非公开类型
            </summary>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.ValidateLifetime">
            <summary>
            验证服务生存期合法化
            </summary>
            <remarks>设置 false 将跳过合法验证</remarks>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.ValidateExposeService">
            <summary>
            验证服务导出配置合法化
            </summary>
            <remarks>设置 false 将跳过合法验证</remarks>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.AddFilter(System.Func{Furion.DependencyInjection.TypeScanningDependencyInjectionModel,System.Boolean})">
            <summary>
            添加服务描述器过滤器
            </summary>
            <param name="configure"><see cref="T:System.Func`2"/></param>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.AddAssemblies(System.Reflection.Assembly[])">
            <summary>
            添加待扫描的程序集
            </summary>
            <param name="assemblies"><see cref="T:System.Reflection.Assembly"/>[]</param>
            <returns><see cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder"/></returns>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.AddAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            添加待扫描的程序集
            </summary>
            <param name="assemblies"><see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <returns><see cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder"/></returns>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            构建模块服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.ScanAssemblies">
            <summary>
            扫描程序集并创建服务描述器模型集合
            </summary>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.CreateServiceDescriptors(System.Type)">
            <summary>
            根据类型创建服务描述器模型集合
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.GetEffectiveServiceTypes(System.Type,System.Type[],System.Type@)">
            <summary>
            获取有效的服务类型集合
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <param name="limitTypes"><see cref="T:System.Type"/>[]</param>
            <param name="dependencyType"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.Release">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.GetServiceLifetime(System.Type,System.Boolean)">
            <summary>
            根据依赖类型获取对应的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/>
            </summary>
            <param name="dependencyType"><see cref="T:System.Type"/></param>
            <param name="validateLifetime"><see cref="P:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.ValidateLifetime"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder.AddingToServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Furion.DependencyInjection.TypeScanningDependencyInjectionModel)">
            <summary>
            将服务描述器添加到 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 中
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="serviceDescriptorModel"><see cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionModel"/></param>
        </member>
        <member name="T:Furion.DependencyInjection.ServiceAddition">
            <summary>
            服务注册方式
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.ServiceAddition.Add">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.ServiceAddition.TryAdd">
            <summary>
            尝试添加
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.ServiceAddition.TryAddEnumerable">
            <summary>
            尝试添加
            </summary>
        </member>
        <member name="F:Furion.DependencyInjection.ServiceAddition.Replace">
            <summary>
            替换
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.IDependency">
            <summary>
            服务依赖接口
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.IScopedDependency">
            <summary>
            范围服务依赖接口
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ISingletonDependency">
            <summary>
            单例服务依赖接口
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.ITransientDependency">
            <summary>
            瞬时服务依赖接口
            </summary>
        </member>
        <member name="T:Furion.DependencyInjection.TypeScanningDependencyInjectionModel">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor"/> 模型
            </summary>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionModel.#ctor(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime,Furion.DependencyInjection.ServiceAddition)">
            <summary>
            <inheritdoc cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionModel"/>
            </summary>
            <param name="serviceType">服务类型</param>
            <param name="implementationType">实现类类型</param>
            <param name="serviceLifetime"><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/></param>
            <param name="serviceAddition"><see cref="T:Furion.DependencyInjection.ServiceAddition"/></param>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionModel.Descriptor">
            <inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor"/>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionModel.Addition">
            <inheritdoc cref="T:Furion.DependencyInjection.ServiceAddition"/>
        </member>
        <member name="P:Furion.DependencyInjection.TypeScanningDependencyInjectionModel.Order">
            <inheritdoc cref="P:Furion.DependencyInjection.DependencyAttribute.Order"/>
        </member>
        <member name="M:Furion.DependencyInjection.TypeScanningDependencyInjectionModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Furion.Component.DependencyInjectionTypeScanningComponent">
            <summary>
            依赖注入模块服务组件
            </summary>
        </member>
        <member name="P:Furion.Component.DependencyInjectionTypeScanningComponent.Props">
            <summary>
            组件配置
            </summary>
        </member>
        <member name="M:Furion.Component.DependencyInjectionTypeScanningComponent.ConfigureServices(Furion.Component.ServiceComponentContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.DependencyInjectionTypeScanningServiceCollectionExtensions">
            <summary>
            依赖注入模块 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DependencyInjectionTypeScanningServiceCollectionExtensions.AddTypeScanning(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder})">
            <summary>
            添加依赖注入模块服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DependencyInjectionTypeScanningServiceCollectionExtensions.AddTypeScanning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder)">
            <summary>
            添加依赖注入模块服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="typeScanningDependencyInjectionBuilder"><see cref="T:Furion.DependencyInjection.TypeScanningDependencyInjectionBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
    </members>
</doc>
