<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Validation.Fluent</name>
    </assembly>
    <members>
        <member name="T:Furion.Validation.FluentValidationBuilder">
            <summary>
            链式数据验证构建器
            </summary>
        </member>
        <member name="F:Furion.Validation.FluentValidationBuilder._assemblies">
            <summary>
            待扫描的程序集集合
            </summary>
        </member>
        <member name="F:Furion.Validation.FluentValidationBuilder._validatorTypes">
            <summary>
            待注册的验证器类型集合
            </summary>
        </member>
        <member name="F:Furion.Validation.FluentValidationBuilder._typeFilterConfigure">
            <summary>
            类型扫描过滤器
            </summary>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Validation.FluentValidationBuilder"/>
            </summary>
        </member>
        <member name="P:Furion.Validation.FluentValidationBuilder.SuppressAssemblyScanning">
            <summary>
            禁用程序集扫描
            </summary>
        </member>
        <member name="P:Furion.Validation.FluentValidationBuilder.SuppressNonPublicType">
            <summary>
            禁用非公开类型
            </summary>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.AddTypeFilter(System.Func{System.Type,System.Boolean})">
            <summary>
            添加类型扫描过滤器
            </summary>
            <param name="configure">自定义配置委托</param>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.AddAssemblies(System.Reflection.Assembly[])">
            <summary>
            添加程序集
            </summary>
            <param name="assemblies"><see cref="T:System.Reflection.Assembly"/>[]</param>
            <returns><see cref="T:Furion.Validation.FluentValidationBuilder"/></returns>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.AddAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            添加程序集
            </summary>
            <param name="assemblies"><see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <returns><see cref="T:Furion.Validation.FluentValidationBuilder"/></returns>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.AddValidator``1">
            <summary>
            添加验证器
            </summary>
            <typeparam name="TValidator"><see cref="T:Furion.Validation.AbstractValidator`1"/></typeparam>
            <returns><see cref="T:Furion.Validation.FluentValidationBuilder"/></returns>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.AddValidator(System.Type)">
            <summary>
            添加验证器
            </summary>
            <param name="validatorType"><see cref="T:Furion.Validation.AbstractValidator`1"/></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Furion.Validation.FluentValidationBuilder.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            构建模块服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="T:Furion.Validation.ValidationObjectResolverContext`2">
            <summary>
            验证对象解析器上下文
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Furion.Validation.ValidationObjectResolverContext`2.#ctor(`0,Furion.Validation.ValidatorBase,System.Reflection.PropertyInfo,`1)">
            <summary>
            <inheritdoc cref="T:Furion.Validation.ValidationObjectResolverContext`2" />
            </summary>
            <param name="objectInstance">对象类型值</param>
            <param name="validator"><see cref="T:Furion.Validation.ValidatorBase"/></param>
            <param name="property"><see cref="T:System.Reflection.PropertyInfo"/></param>
            <param name="propertyValue">属性类型值</param>
        </member>
        <member name="P:Furion.Validation.ValidationObjectResolverContext`2.ObjectInstance">
            <summary>
            对象类型值
            </summary>
        </member>
        <member name="P:Furion.Validation.ValidationObjectResolverContext`2.Validator">
            <inheritdoc cref="T:Furion.Validation.ValidatorBase" />
        </member>
        <member name="P:Furion.Validation.ValidationObjectResolverContext`2.Property">
            <inheritdoc cref="T:System.Reflection.PropertyInfo" />
        </member>
        <member name="P:Furion.Validation.ValidationObjectResolverContext`2.PropertyValue">
            <summary>
            属性类型值
            </summary>
        </member>
        <member name="T:Furion.Validation.IObjectValidator`1">
            <summary>
            验证器服务
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:Furion.Validation.IObjectValidator`1.When(System.Func{`0,System.Boolean})">
            <summary>
            配置执行验证的符合条件表达式
            </summary>
            <param name="conditionExpression">条件表达式</param>
            <returns><see cref="T:Furion.Validation.IObjectValidator`1"/></returns>
        </member>
        <member name="M:Furion.Validation.IObjectValidator`1.WhenContext(System.Func{System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean})">
            <summary>
            配置执行验证的符合条件表达式
            </summary>
            <param name="conditionExpression">条件表达式</param>
            <returns><see cref="T:Furion.Validation.IObjectValidator`1"/></returns>
        </member>
        <member name="M:Furion.Validation.IObjectValidator`1.Reset">
            <summary>
            重置验证器
            </summary>
            <returns><see cref="T:Furion.Validation.IObjectValidator`1"/></returns>
        </member>
        <member name="T:Furion.Validation.IObjectValidator">
            <summary>
            验证器服务
            </summary>
        </member>
        <member name="P:Furion.Validation.IObjectValidator.Options">
            <inheritdoc cref="T:Furion.Validation.ValidatorOptions" />
        </member>
        <member name="M:Furion.Validation.IObjectValidator.IsValid(System.Object,System.String)">
            <summary>
            检查对象合法性
            </summary>
            <param name="instance">对象实例</param>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Furion.Validation.IObjectValidator.GetValidationResults(System.Object,System.String)">
            <summary>
            获取验证结果
            </summary>
            <param name="instance">对象实例</param>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.Validation.IObjectValidator.Validate(System.Object,System.String)">
            <summary>
            执行验证
            </summary>
            <param name="instance">对象实例</param>
            <param name="ruleSet">规则集</param>
            <exception cref="T:Furion.Validation.AggregateValidationException"></exception>
        </member>
        <member name="M:Furion.Validation.IObjectValidator.IsInRuleSet(System.String)">
            <summary>
            检查规则集
            </summary>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Furion.Validation.Helpers">
            <summary>
            数据验证模块帮助类
            </summary>
        </member>
        <member name="F:Furion.Validation.Helpers._ruleSetSeparator">
            <summary>
            规则集分隔符
            </summary>
        </member>
        <member name="M:Furion.Validation.Helpers.EnsureLegalValidatorType(System.Type)">
            <summary>
            检查验证器类型合法性
            </summary>
            <param name="validatorType"><see cref="T:Furion.Validation.AbstractValidator`1"/></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Furion.Validation.ValidatorOptions">
            <summary>
            验证器选项
            </summary>
        </member>
        <member name="P:Furion.Validation.ValidatorOptions.CascadeMode">
            <inheritdoc cref="T:Furion.Validation.ValidatorCascadeMode" />
        </member>
        <member name="P:Furion.Validation.ValidatorOptions.SuppressAnnotationValidation">
            <summary>
            禁用注解（特性）验证
            </summary>
        </member>
        <member name="F:Furion.Validation.ValidatorOptions._validateAllPropertiesForObjectAnnotationValidator">
            <inheritdoc cref="P:Furion.Validation.ValidatorOptions.ValidateAllPropertiesForObjectAnnotationValidator" />
        </member>
        <member name="P:Furion.Validation.ValidatorOptions.ValidateAllPropertiesForObjectAnnotationValidator">
            <summary>
            为对象注解（特性）配置是否验证所有属性
            </summary>
        </member>
        <member name="E:Furion.Validation.ValidatorOptions.PropertyChanged">
            <summary>
            属性变更事件
            </summary>
        </member>
        <member name="M:Furion.Validation.ValidatorOptions.OnPropertyChanged(System.String)">
            <summary>
            属性变更事件触发方法
            </summary>
            <param name="propertyName">属性名称</param>
        </member>
        <member name="T:Furion.Validation.FluentValidatorScanner">
            <summary>
            链式验证器扫描器
            </summary>
        </member>
        <member name="F:Furion.Validation.FluentValidatorScanner._services">
            <inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
        </member>
        <member name="F:Furion.Validation.FluentValidatorScanner._fluentValidationBuilder">
            <inheritdoc cref="T:Furion.Validation.FluentValidationBuilder"/>
        </member>
        <member name="M:Furion.Validation.FluentValidatorScanner.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Furion.Validation.FluentValidationBuilder)">
            <summary>
            <inheritdoc cref="T:Furion.Validation.FluentValidatorScanner"/>
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="fluentValidationBuilder"><see cref="T:Furion.Validation.FluentValidationBuilder"/></param>
        </member>
        <member name="M:Furion.Validation.FluentValidatorScanner.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Furion.Validation.FluentValidatorScanner.ScanToAddServices">
            <summary>
            扫描并添加服务
            </summary>
        </member>
        <member name="M:Furion.Validation.FluentValidatorScanner.GetValidatorTypes">
            <summary>
            获取验证器类型集合
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:Furion.Validation.FluentValidatorScanner.AddService(System.Type)">
            <summary>
            添加服务
            </summary>
            <param name="validatorType"><see cref="T:Furion.Validation.ValidatorBase"/></param>
        </member>
        <member name="T:Furion.Validation.AbstractValidator`1">
            <summary>
            对象验证器抽象基类
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="F:Furion.Validation.AbstractValidator`1._objectValidator">
            <summary>
            <see cref="T:Furion.Validation.ObjectValidator`1"/>
            </summary>
        </member>
        <member name="F:Furion.Validation.AbstractValidator`1._ruleSet">
            <summary>
            当前规则集
            </summary>
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Validation.AbstractValidator`1"/>
            </summary>
        </member>
        <member name="P:Furion.Validation.AbstractValidator`1.Options">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.ConfigureOptions(System.Action{Furion.Validation.ValidatorOptions})">
            <summary>
            配置验证器选项
            </summary>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Furion.Validation.IObjectValidator`1"/></returns>
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            添加属性规则验证
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性选择器</param>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)">
            <summary>
            添加属性规则集验证
            </summary>
            <param name="ruleSet">规则集</param>
            <param name="setAction"><see cref="T:System.Action"/></param>
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.WhenContext(System.Func{System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.Reset">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.IsValid(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.GetValidationResults(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.Validate(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.AbstractValidator`1.IsInRuleSet(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Furion.Validation.ObjectValidator`1">
            <summary>
            对象验证器
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="F:Furion.Validation.ObjectValidator`1._propertyValidators">
            <summary>
            属性验证器集合
            </summary>
        </member>
        <member name="F:Furion.Validation.ObjectValidator`1._annotationValidator">
            <inheritdoc cref="T:Furion.Validation.ObjectAnnotationValidator" />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Validation.ObjectValidator`1"/>
            </summary>
        </member>
        <member name="P:Furion.Validation.ObjectValidator`1.Options">
            <inheritdoc />
        </member>
        <member name="P:Furion.Validation.ObjectValidator`1.ConditionExpression">
            <summary>
            执行验证的符合条件表达式
            </summary>
        </member>
        <member name="P:Furion.Validation.ObjectValidator`1.Items">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.Create(System.Action{Furion.Validation.ObjectValidator{`0}})">
            <summary>
            初始化对象验证器
            </summary>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Furion.Validation.ObjectValidator`1"/></returns>
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.ConfigureOptions(System.Action{Furion.Validation.ValidatorOptions})">
            <summary>
            配置验证器选项
            </summary>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Furion.Validation.ObjectValidator`1"/></returns>
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            初始化属性验证器
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性选择器</param>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.When(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.WhenContext(System.Func{System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.Reset">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.CanValidate(System.Object)">
            <summary>
            检查是否可以执行验证程序
            </summary>
            <param name="instance">对象实例</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.IsValid(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.GetValidationResults(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.Validate(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.ObjectValidator`1.IsInRuleSet(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Furion.Validation.PropertyValidator`2">
            <summary>
            属性验证器
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <summary>
            属性验证器
            </summary>
        </member>
        <member name="T:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1">
            <summary>
            验证器委托器
            </summary>
            <typeparam name="TValidator"><see cref="T:Furion.Validation.ValidatorBase"/></typeparam>
        </member>
        <member name="F:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1._propertyValidator">
            <inheritdoc cref="T:Furion.Validation.PropertyValidator`2" />
        </member>
        <member name="F:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1._constructorParametersAccessor">
            <summary>
            构造函数参数访问器
            </summary>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.#ctor(Furion.Validation.PropertyValidator{`0,`1},System.Func{`0,System.Object[]},System.Func{System.String})">
            <summary>
            <inheritdoc cref="T:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1" />
            </summary>
            <param name="propertyValidator"><see cref="T:Furion.Validation.PropertyValidator`2"/></param>
            <param name="constructorParametersAccessor">构造函数参数访问器</param>
            <param name="errorMessageResourceAccessor">错误消息资源访问器</param>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.Validator">
            <inheritdoc cref="T:Furion.Validation.ValidatorBase" />
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.PropertyValue">
            <summary>
            属性值
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.ValidatorConfigure">
            <summary>
            自定义配置委托
            </summary>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.IsValid(`0)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.GetValidationResults(`0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.FormatErrorMessage(System.String,`0)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.Validate(`0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.Configure(System.Action{`2})">
            <summary>
            配置验证器
            </summary>
            <param name="configure">自定义配置委托</param>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.Initialize(`0)">
            <summary>
            初始化
            </summary>
            <param name="instance">对象实例</param>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ValidatorDelegator`1.GetDisplayName(System.String)">
            <summary>
            获取属性显示名称
            </summary>
            <param name="name">显示名称</param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="F:Furion.Validation.PropertyValidator`2._objectValidator">
            <inheritdoc cref="T:Furion.Validation.ObjectValidator`1" />
        </member>
        <member name="F:Furion.Validation.PropertyValidator`2._annotationValidator">
            <inheritdoc cref="T:Furion.Validation.PropertyAnnotationValidator`2" />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.#ctor(Furion.Validation.ObjectValidator{`0},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            <inheritdoc cref="T:Furion.Validation.PropertyValidator`2"/>
            </summary>
            <param name="objectValidator"><see cref="T:Furion.Validation.ObjectValidator`1"/></param>
            <param name="propertyExpression">属性选择器</param>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.Validators">
            <summary>
            验证器集合
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.Property">
            <inheritdoc cref="P:Furion.Validation.PropertyValidator`2.Property"/>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.DisplayName">
            <summary>
            属性别名
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.Options">
            <inheritdoc />
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.ValidationObjectResolver">
            <summary>
            验证对象解析器
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.ConditionExpression">
            <summary>
            执行验证的符合条件表达式
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.SubValidator">
            <summary>
            子属性验证器
            </summary>
        </member>
        <member name="P:Furion.Validation.PropertyValidator`2.RuleSet">
            <summary>
            规则集
            </summary>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ConfigureOptions(System.Action{Furion.Validation.ValidatorOptions})">
            <summary>
            配置验证器选项
            </summary>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.WithErrorMessage(System.String)">
            <summary>
            设置错误消息
            </summary>
            <param name="errorMessage">错误消息</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.WithDisplayName(System.String)">
            <summary>
            设置属性别名
            </summary>
            <param name="displayName">属性别名</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.SetValidator(Furion.Validation.IObjectValidator{`1})">
            <summary>
            设置子属性验证器
            </summary>
            <param name="subValidator"><see cref="T:Furion.Validation.IObjectValidator`1"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.SetValidationObjectResolver(System.Func{Furion.Validation.ValidationObjectResolverContext{`0,`1},System.Object})">
            <summary>
            设置验证对象解析器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.When(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.WhenContext(System.Func{System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Reset">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.CanValidate(System.Object,System.String)">
            <summary>
            检查是否可以执行验证程序
            </summary>
            <param name="instance">对象实例</param>
            <param name="ruleSet">规则集</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.IsValid(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GetValidationResults(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Validate(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.IsInRuleSet(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GetPropertyValue(System.Object)">
            <summary>
            获取属性值
            </summary>
            <param name="instance">对象实例</param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ResolveValidationObject(System.Object,Furion.Validation.ValidatorBase,`1)">
            <summary>
            解析验证对象
            </summary>
            <param name="instance">对象实例</param>
            <param name="validator"><see cref="T:Furion.Validation.ValidatorBase"/></param>
            <param name="propertyValue">属性值</param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GetDisplayName">
            <summary>
            获取属性显示名称
            </summary>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Age">
            <summary>
            添加年龄（0-120）验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.BankCardNumber">
            <summary>
            添加银行卡号验证器
            </summary>
            <remarks>
            <see href="https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1">银行卡号对照表</see>
            </remarks>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ChineseName">
            <summary>
            添加中文姓名验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Chinese">
            <summary>
            添加中文/汉字验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ColorValue">
            <summary>
            添加颜色值验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.ColorValue(System.Boolean)">
            <summary>
            添加颜色值验证器
            </summary>
            <param name="fullMode">完整模式</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Composite(Furion.Validation.ValidatorBase[])">
            <summary>
            添加组合验证器
            </summary>
            <param name="validators">验证器集合</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Composite(System.Collections.Generic.IList{Furion.Validation.ValidatorBase})">
            <summary>
            添加组合验证器
            </summary>
            <param name="validators">验证器集合</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Composite(Furion.Validation.ValidatorBase[],Furion.Validation.ValidatorCascadeMode)">
            <summary>
            添加组合验证器
            </summary>
            <param name="validators">验证器集合</param>
            <param name="cascadeMode"><see cref="T:Furion.Validation.ValidatorCascadeMode"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Composite(System.Collections.Generic.IList{Furion.Validation.ValidatorBase},Furion.Validation.ValidatorCascadeMode)">
            <summary>
            添加组合验证器
            </summary>
            <param name="validators">验证器集合</param>
            <param name="cascadeMode"><see cref="T:Furion.Validation.ValidatorCascadeMode"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Domain">
            <summary>
            添加域名验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.EndsWith(System.Char)">
            <summary>
            添加以特定字符/字符串结尾的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.EndsWith(System.String)">
            <summary>
            添加以特定字符/字符串结尾的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.EndsWith(System.Char,System.StringComparison)">
            <summary>
            添加以特定字符/字符串结尾的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.EndsWith(System.String,System.StringComparison)">
            <summary>
            添加以特定字符/字符串结尾的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Equal(System.Object)">
            <summary>
            添加相等验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Equal(System.Func{`0,System.Object})">
            <summary>
            添加相等验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThanOrEqualTo(System.Int32)">
            <summary>
            添加大于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThanOrEqualTo(System.Double)">
            <summary>
            添加大于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThanOrEqualTo(System.Object)">
            <summary>
            添加大于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThanOrEqualTo(System.Func{`0,System.Object})">
            <summary>
            添加大于等于验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThan(System.Int32)">
            <summary>
            添加大于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThan(System.Double)">
            <summary>
            添加大于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThan(System.Object)">
            <summary>
            添加大于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.GreaterThan(System.Func{`0,System.Object})">
            <summary>
            添加大于验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.IdCardNumber">
            <summary>
            添加身份证号验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThanOrEqualTo(System.Int32)">
            <summary>
            添加小于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThanOrEqualTo(System.Double)">
            <summary>
            添加小于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThanOrEqualTo(System.Object)">
            <summary>
            添加小于等于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThanOrEqualTo(System.Func{`0,System.Object})">
            <summary>
            添加小于等于验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThan(System.Int32)">
            <summary>
            添加小于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThan(System.Double)">
            <summary>
            添加小于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThan(System.Object)">
            <summary>
            添加小于验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.LessThan(System.Func{`0,System.Object})">
            <summary>
            添加小于验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.NotEmpty">
            <summary>
            添加非空验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.NotEqual(System.Object)">
            <summary>
            添加不相等验证器
            </summary>
            <param name="compareValue">比较的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.NotEqual(System.Func{`0,System.Object})">
            <summary>
            添加不相等验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Password">
            <summary>
            添加密码验证器
            </summary>
            <remarks>
            密码长度为 6-18 位，包含至少一个字母和一个数字
            </remarks>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.PhoneNumber">
            <summary>
            添加手机号验证器
            </summary>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.PostalCode">
            <summary>
            添加邮政编码验证器
            </summary>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Predicate(System.Func{`0,System.Boolean})">
            <summary>
            添加自定义委托验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Single">
            <summary>
            添加单项验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StartsWith(System.Char)">
            <summary>
            添加以特定字符/字符串开头的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StartsWith(System.String)">
            <summary>
            添加以特定字符/字符串开头的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StartsWith(System.Char,System.StringComparison)">
            <summary>
            添加以特定字符/字符串开头的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StartsWith(System.String,System.StringComparison)">
            <summary>
            添加以特定字符/字符串开头的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringContains(System.Char)">
            <summary>
            添加包含特定字符/字符串的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringContains(System.String)">
            <summary>
            添加包含特定字符/字符串的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringContains(System.Char,System.StringComparison)">
            <summary>
            添加包含特定字符/字符串的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringContains(System.String,System.StringComparison)">
            <summary>
            添加包含特定字符/字符串的验证器
            </summary>
            <param name="searchValue">检索的值</param>
            <param name="comparison"><see cref="T:System.StringComparison"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StrongPassword">
            <summary>
            添加强类型密码验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Telephone">
            <summary>
            添加座机（电话）验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.UserName">
            <summary>
            添加用户名验证器
            </summary>
            <remarks>
            长度 4-16 位，仅支持字母，数字，下划线，减号组合
            </remarks>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.NotNull">
            <summary>
            添加必填验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.NotNull(System.Boolean)">
            <summary>
            添加必填验证器
            </summary>
            <param name="allowEmptyStrings">是否允许空字符串</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.MaxLength(System.Int32)">
            <summary>
            添加最大长度验证器
            </summary>
            <param name="length">长度</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.MinLength(System.Int32)">
            <summary>
            添加最小长度验证器
            </summary>
            <param name="length">长度</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Length(System.Int32,System.Int32)">
            <summary>
            添加长度验证器
            </summary>
            <param name="minimumLength">最小长度</param>
            <param name="maximumLength">最大长度</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringLength(System.Int32)">
            <summary>
            添加字符串长度验证器
            </summary>
            <param name="maximumLength">最大长度</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.StringLength(System.Int32,System.Int32)">
            <summary>
            添加字符串长度验证器
            </summary>
            <param name="minimumLength">最小长度</param>
            <param name="maximumLength">最大长度</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Range(System.Int32,System.Int32)">
            <summary>
            添加范围验证器
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximum">最大值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Range(System.Double,System.Double)">
            <summary>
            添加范围验证器
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximum">最大值</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.RegularExpression(System.String)">
            <summary>
            添加正则表达式验证器
            </summary>
            <param name="pattern">正则表达式</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.RegularExpression(System.String,System.Int32)">
            <summary>
            添加正则表达式验证器
            </summary>
            <param name="pattern">正则表达式</param>
            <param name="matchTimeoutInMilliseconds">匹配超时毫秒数</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.EmailAddress">
            <summary>
            添加邮箱地址验证器
            </summary>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Add(Furion.Validation.ValidatorBase)">
            <summary>
            添加验证器
            </summary>
            <param name="validator"><see cref="T:Furion.Validation.ValidatorBase"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.AddAttribute(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            添加注解（特性）验证器
            </summary>
            <param name="validationAttribute"><see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/></param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="M:Furion.Validation.PropertyValidator`2.Custom(System.Func{`0,System.Boolean})">
            <summary>
            添加自定义委托验证器
            </summary>
            <param name="predicate">自定义委托</param>
            <returns><see cref="T:Furion.Validation.PropertyValidator`2"/></returns>
        </member>
        <member name="T:Furion.Component.FluentValidationComponent">
            <summary>
            数据验证模块服务组件
            </summary>
        </member>
        <member name="P:Furion.Component.FluentValidationComponent.Props">
            <summary>
            组件配置
            </summary>
        </member>
        <member name="M:Furion.Component.FluentValidationComponent.ConfigureServices(Furion.Component.ServiceComponentContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.FluentValidationServiceCollectionExtensions">
            <summary>
            数据验证模块 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FluentValidationServiceCollectionExtensions.AddFluentValidation(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Furion.Validation.FluentValidationBuilder})">
            <summary>
            添加链式数据验证服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FluentValidationServiceCollectionExtensions.AddFluentValidation(Microsoft.Extensions.DependencyInjection.IServiceCollection,Furion.Validation.FluentValidationBuilder)">
            <summary>
            添加链式数据验证服务
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="fluentValidationBuilder"><see cref="T:Furion.Validation.FluentValidationBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
    </members>
</doc>
