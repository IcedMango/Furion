<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Component</name>
    </assembly>
    <members>
        <member name="T:Furion.Component.DependsOnAttribute">
            <summary>
            组件依赖配置
            </summary>
        </member>
        <member name="M:Furion.Component.DependsOnAttribute.#ctor(System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="types"></param>
        </member>
        <member name="P:Furion.Component.DependsOnAttribute.Types">
            <summary>
            依赖的组件类型
            </summary>
        </member>
        <member name="T:Furion.Component.ApplicationContext">
            <summary>
            应用组件上下文
            </summary>
        </member>
        <member name="T:Furion.Component.ServiceContext">
            <summary>
            服务组件上下文
            </summary>
        </member>
        <member name="T:Furion.Component.Component">
            <summary>
            组件化实现依赖基类
            </summary>
        </member>
        <member name="M:Furion.Component.Component.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Furion.Component.Component.ConfigureServices(Furion.Component.ServiceContext)">
            <summary>
            配置服务
            </summary>
            <param name="context"><see cref="T:Furion.Component.ServiceContext"/></param>
        </member>
        <member name="M:Furion.Component.Component.Configure(Furion.Component.ApplicationContext)">
            <summary>
            配置中间件
            </summary>
            <param name="context"><see cref="T:Furion.Component.ApplicationContext"/></param>
        </member>
        <member name="T:Furion.Component.Topological">
            <summary>
            拓扑查找依赖关系
            </summary>
        </member>
        <member name="M:Furion.Component.Topological.CreateDependencies(System.Type)">
            <summary>
            创建依赖关系
            </summary>
            <param name="entryType"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Component.Topological.TopologicalSort(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            拓扑排序算法
            </summary>
            <param name="dependencies"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Component.Topological.VisitNode(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Type[]},System.Collections.Generic.HashSet{System.Type},System.Collections.Generic.List{System.Type})">
            <summary>
            节点搜索
            </summary>
            <param name="node"></param>
            <param name="dependencies"></param>
            <param name="visited"></param>
            <param name="sortedNodes"></param>
        </member>
        <member name="M:Furion.Component.Topological.HasCycle(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            检查依赖关系是否存在循环依赖
            </summary>
            <param name="dependencies"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions">
            <summary>
            组件化模块拓展
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加组件
            </summary>
            <typeparam name="TComponent"><see cref="T:Furion.Component.Component"/></typeparam>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IServiceCollectionExtensions">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> 拓展
            </summary>
        </member>
    </members>
</doc>
