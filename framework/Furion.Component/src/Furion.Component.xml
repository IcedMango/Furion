<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Component</name>
    </assembly>
    <members>
        <member name="T:Furion.Component.DependsOnAttribute">
            <summary>
            组件依赖链配置
            </summary>
        </member>
        <member name="M:Furion.Component.DependsOnAttribute.#ctor(System.Type[])">
            <summary>
            构造函数
            </summary>
            <param name="dependencies"></param>
        </member>
        <member name="P:Furion.Component.DependsOnAttribute.Dependencies">
            <summary>
            依赖组件列表
            </summary>
        </member>
        <member name="T:Furion.Component.ComponentBuilder">
            <summary>
            组件模块构建器
            </summary>
        </member>
        <member name="F:Furion.Component.ComponentBuilder._optionsActions">
            <summary>
            组件参数委托字典
            </summary>
        </member>
        <member name="M:Furion.Component.ComponentBuilder.Configure``1(System.Action{``0})">
            <summary>
            配置组件参数
            </summary>
            <typeparam name="TOptions">组件参数类型</typeparam>
            <param name="configure">配置委托</param>
            <returns><see cref="T:Furion.Component.ComponentBuilder"/></returns>
        </member>
        <member name="M:Furion.Component.ComponentBuilder.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            构建模块
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="T:Furion.Component.ComponentContext">
            <summary>
            组件上下文
            </summary>
        </member>
        <member name="M:Furion.Component.ComponentContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="P:Furion.Component.ComponentContext.Configuration">
            <inheritdoc cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
        </member>
        <member name="P:Furion.Component.ComponentContext.Environment">
            <inheritdoc cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/>
        </member>
        <member name="T:Furion.Component.ServiceContext">
            <summary>
            服务组件上下文
            </summary>
        </member>
        <member name="M:Furion.Component.ServiceContext.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Furion.Component.ServiceContext.Deconstruct(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            析构实例
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="P:Furion.Component.ServiceContext.Services">
            <inheritdoc cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
        </member>
        <member name="M:Furion.Component.ServiceContext.GetOptions``1">
            <summary>
            获取组件参数
            </summary>
            <typeparam name="TOption">组件参数类型</typeparam>
            <returns><typeparamref name="TOption"/></returns>
        </member>
        <member name="M:Furion.Component.ServiceContext.GetOptionsOrDefault``1">
            <summary>
            获取组件参数
            </summary>
            <typeparam name="TOption">组件参数类型</typeparam>
            <returns><typeparamref name="TOption"/></returns>
        </member>
        <member name="T:Furion.Component.ComponentBase">
            <summary>
            组件化依赖抽象基类
            </summary>
        </member>
        <member name="M:Furion.Component.ComponentBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Furion.Component.ComponentBase.Options">
            <inheritdoc cref="T:Furion.Component.ComponentOptions"/>
        </member>
        <member name="M:Furion.Component.ComponentBase.Configure``1(System.Action{``0})">
            <summary>
            配置组件参数
            </summary>
            <typeparam name="TOptions">组件参数类型</typeparam>
            <param name="configure">配置委托</param>
        </member>
        <member name="M:Furion.Component.ComponentBase.PreConfigureServices(Furion.Component.ServiceContext)">
            <summary>
            前置配置服务
            </summary>
            <param name="context"><see cref="T:Furion.Component.ServiceContext"/></param>
        </member>
        <member name="M:Furion.Component.ComponentBase.ConfigureServices(Furion.Component.ServiceContext)">
            <summary>
            配置服务
            </summary>
            <param name="context"><see cref="T:Furion.Component.ServiceContext"/></param>
        </member>
        <member name="M:Furion.Component.ComponentBase.GenerateTopologicalSortedMap``1">
            <summary>
            生成组件依赖拓扑排序图
            </summary>
            <typeparam name="TComponent">组件类型</typeparam>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.Component.ComponentBase.GenerateTopologicalSortedMap(System.Type)">
            <summary>
            生成组件依赖拓扑排序图
            </summary>
            <param name="componentType">组件类型</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.Component.ComponentBase.GenerateTopologicalSortedMap(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            生成组件依赖拓扑排序图
            </summary>
            <param name="dependencies">组件依赖字典</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.Component.ComponentBase.GenerateComponentDependencies``1">
            <summary>
            生成组件依赖字典
            </summary>
            <typeparam name="TComponent">组件类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Furion.Component.ComponentBase.GenerateComponentDependencies(System.Type)">
            <summary>
            生成组件依赖字典
            </summary>
            <param name="componentType">组件类型</param>
            <returns><see cref="T:System.Collections.Generic.Dictionary`2"/></returns>
        </member>
        <member name="M:Furion.Component.ComponentBase.CheckComponentDependencies(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            检查组件依赖字典
            </summary>
            <param name="dependencies">组件依赖字典</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Furion.Component.ComponentBase.CheckComponent``1">
            <summary>
            检查组件类型
            </summary>
            <typeparam name="TComponent">组件类型</typeparam>
        </member>
        <member name="M:Furion.Component.ComponentBase.CheckComponent(System.Type)">
            <summary>
            检查组件类型
            </summary>
            <param name="componentType">组件类型</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="F:Furion.Component.ComponentBase.WEBCOMPONENT_FULLNAME">
            <summary>
            WebComponent 类型全名
            </summary>
        </member>
        <member name="T:Furion.Component.ComponentOptionsActionsExtensions">
            <summary>
            组件参数委托字典拓展
            </summary>
        </member>
        <member name="M:Furion.Component.ComponentOptionsActionsExtensions.AddOrUpdate(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{System.Object}}},System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{System.Object}}})">
            <summary>
            添加或更新
            </summary>
            <param name="optionsActions">组件参数委托字典</param>
            <param name="otherOptionsActions">其他组件参数委托字典</param>
        </member>
        <member name="M:Furion.Component.ComponentOptionsActionsExtensions.AddOrUpdate``1(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{System.Object}}},System.Action{``0})">
            <summary>
            添加或更新
            </summary>
            <typeparam name="TOptions">组件参数类型</typeparam>
            <param name="optionsActions">组件参数委托字典</param>
            <param name="configure">配置委托</param>
        </member>
        <member name="M:Furion.Component.ComponentOptionsActionsExtensions.AddOrUpdate(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{System.Object}}},System.Type,System.Action{System.Object})">
            <summary>
            添加或更新
            </summary>
            <param name="optionsType">组件参数类型</param>
            <param name="optionsActions">组件参数委托字典</param>
            <param name="configure">配置委托</param>
        </member>
        <member name="M:Furion.Component.ComponentOptionsActionsExtensions.GetOptions``1(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{System.Action{System.Object}}})">
            <summary>
            获取组件参数
            </summary>
            <typeparam name="TOptions">组件参数类型</typeparam>
            <returns><typeparamref name="TOptions"/></returns>
        </member>
        <member name="T:Furion.Component.Topological">
            <summary>
            拓扑算法
            </summary>
        </member>
        <member name="M:Furion.Component.Topological.Sort(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            拓扑排序算法
            </summary>
            <param name="dependencies">依赖节点集合</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:Furion.Component.Topological.HasCycle(System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            检查依赖关系是否存在循环依赖
            </summary>
            <param name="dependencies">依赖节点集合</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Furion.Component.Topological.VisitNode(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Type[]},System.Collections.Generic.HashSet{System.Type},System.Collections.Generic.List{System.Type})">
            <summary>
            节点访问
            </summary>
            <param name="node">当前节点</param>
            <param name="dependencies">依赖节点集合</param>
            <param name="visited">已访问过的节点</param>
            <param name="sortedNodes">已排序的节点</param>
        </member>
        <member name="M:Furion.Component.Topological.HasCycleHelper(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Type[]},System.Collections.Generic.HashSet{System.Type},System.Collections.Generic.HashSet{System.Type})">
            <summary>
            检查依赖关系是否存在循环依赖（内部）
            </summary>
            <param name="node">当前节点</param>
            <param name="dependencies">依赖节点集合</param>
            <param name="visited">已访问过的节点</param>
            <param name="currentPath">单曲遍历路径上的节点</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Furion.Component.ComponentOptions">
            <summary>
            组件配置选项
            </summary>
        </member>
        <member name="M:Furion.Component.ComponentOptions.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Furion.Component.ComponentOptions.OptionsActions">
            <summary>
            组件参数委托字典
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions">
            <summary>
            组件化模块拓展
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Furion.Component.ComponentBuilder})">
            <summary>
            添加组件
            </summary>
            <typeparam name="TComponent"><see cref="T:Furion.Component.ComponentBase"/></typeparam>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="configure">自定义构建器配置</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Furion.Component.ComponentBuilder)">
            <summary>
            添加组件
            </summary>
            <typeparam name="TComponent"><see cref="T:Furion.Component.ComponentBase"/></typeparam>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="componentBuilder"><see cref="T:Furion.Component.ComponentBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Furion.Component.ComponentBuilder})">
            <summary>
            添加组件
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="componentType"><see cref="T:Furion.Component.ComponentBase"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="configure">自定义构建器配置</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,Microsoft.Extensions.Configuration.IConfiguration,Furion.Component.ComponentBuilder)">
            <summary>
            添加组件
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="componentType"><see cref="T:Furion.Component.ComponentBase"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="componentBuilder"><see cref="T:Furion.Component.ComponentBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.Dictionary{System.Type,System.Type[]},Microsoft.Extensions.Configuration.IConfiguration,System.Action{Furion.Component.ComponentBuilder})">
            <summary>
            添加组件
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="dependencies">组件依赖字典</param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="configure">自定义构建器配置</param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.AddComponent(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.Dictionary{System.Type,System.Type[]},Microsoft.Extensions.Configuration.IConfiguration,Furion.Component.ComponentBuilder)">
            <summary>
            添加组件
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="dependencies">组件依赖字典</param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="componentBuilder"><see cref="T:Furion.Component.ComponentBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.GetHostEnvironment(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            获取环境对象
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.GetSingletonInstance``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)">
            <summary>
            获取单例服务对象
            </summary>
            <remarks>如果服务不存在则将自动注册</remarks>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <param name="instance"><typeparamref name="T"/></param>
            <returns><typeparamref name="T"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ComponentServiceCollectionExtensions.GetComponentOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            获取组件配置选项
            </summary>
            <param name="services"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
            <returns><see cref="T:Furion.Component.ComponentOptions"/></returns>
        </member>
    </members>
</doc>
