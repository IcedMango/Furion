<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Exception</name>
    </assembly>
    <members>
        <member name="T:Furion.Exception.RetryPolicyContext`1">
            <summary>
            重试策略上下文
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicyContext`1.#ctor">
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`1"/>
        </member>
        <member name="P:Furion.Exception.RetryPolicyContext`1.Exception">
            <inheritdoc cref="T:System.Exception"/>
        </member>
        <member name="P:Furion.Exception.RetryPolicyContext`1.Result">
            <summary>
            操作返回值
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicyContext`1.RetryCount">
            <summary>
            当前重试次数
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicyContext`1.TimeForRetry">
            <summary>
            重试的时间
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicyContext`1.Properties">
            <summary>
            附加属性
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicyContext`1.Increment">
            <summary>
            递增上下文数据
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy">
            <summary>
            重试策略
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`1">
            <summary>
            重试策略
            </summary>
            <typeparam name="TResult">操作返回值类型</typeparam>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.MaxRetryCount">
            <summary>
            最大重试次数
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.RetryIntervals">
            <summary>
            重试间隔集合
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.RetryAction">
            <summary>
            重试时操作方法
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.ResultConditions">
            <summary>
            操作结果条件集合
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.HandleExceptions">
            <summary>
            捕获的异常集合
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy`1.HandleInnerExceptions">
            <summary>
            捕获的内部异常集合
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.ShouldRetry(Furion.Exception.RetryPolicyContext{`0})">
            <summary>
            检查是否可以执行重试操作
            </summary>
            <param name="context"><see cref="T:Furion.Exception.RetryPolicy`1"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.Handle``1">
            <summary>
            添加捕获异常类型
            </summary>
            <typeparam name="TException"><see cref="T:System.Exception"/></typeparam>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.Or``1">
            <summary>
            添加捕获异常类型
            </summary>
            <typeparam name="TException"><see cref="T:System.Exception"/></typeparam>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.HandleInner``1">
            <summary>
            添加捕获内部异常类型
            </summary>
            <typeparam name="TException"><see cref="T:System.Exception"/></typeparam>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.OrInner``1">
            <summary>
            添加捕获内部异常类型
            </summary>
            <typeparam name="TException"><see cref="T:System.Exception"/></typeparam>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.HandleResult(System.Func{Furion.Exception.RetryPolicyContext{`0},System.Boolean})">
            <summary>
            添加操作结果条件
            </summary>
            <param name="resultCondition">操作结果条件</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.OrResult(System.Func{Furion.Exception.RetryPolicyContext{`0},System.Boolean})">
            <summary>
            添加操作结果条件
            </summary>
            <param name="resultCondition">操作结果条件</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.WaitAndRetry(System.TimeSpan[])">
            <summary>
            添加重试间隔
            </summary>
            <param name="retryIntervals">重试间隔</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.OnRetry(System.Action{Furion.Exception.RetryPolicyContext{`0}})">
            <summary>
            添加重试时操作方法
            </summary>
            <param name="retryAction">重试时操作方法</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.Forever">
            <summary>
            配置重试策略重试直至成功
            </summary>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.Execute(System.Action)">
            <summary>
            执行同步操作方法
            </summary>
            <param name="operation">操作方法</param>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            执行异步操作方法
            </summary>
            <param name="operation">操作方法</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.Execute(System.Func{`0})">
            <summary>
            执行同步操作方法
            </summary>
            <param name="operation">操作方法</param>
            <returns><typeparamref name="TResult"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.ExecuteAsync(System.Func{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)">
            <summary>
            执行异步操作方法
            </summary>
            <param name="operation">操作方法</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.ReturnResultOrThrow(Furion.Exception.RetryPolicyContext{`0})">
            <summary>
            返回结果或抛出异常
            </summary>
            <param name="context"><see cref="T:Furion.Exception.RetryPolicyContext`1"/></param>
            <returns><typeparamref name="TResult"/></returns>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.WhenCatchException(Furion.Exception.RetryPolicyContext{`0},System.Collections.Generic.IList{System.Type},System.Exception)">
            <summary>
            检查异常信息是否匹配
            </summary>
            <param name="context"><see cref="T:Furion.Exception.RetryPolicyContext`1"/></param>
            <param name="exceptionTypes">异常类型集合</param>
            <param name="exception"><see cref="T:System.Exception"/></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Furion.Exception.Polly">
            <summary>
            策略静态类
            </summary>
        </member>
        <member name="M:Furion.Exception.Polly.Retry">
            <summary>
            初始化重试策略
            </summary>
            <returns><see cref="T:Furion.Exception.RetryPolicy"/></returns>
        </member>
        <member name="M:Furion.Exception.Polly.Retry``1">
            <summary>
            初始化重试策略
            </summary>
            <typeparam name="TResult">操作返回值类型</typeparam>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
        <member name="M:Furion.Exception.Polly.Retry(System.UInt32)">
            <summary>
            初始化重试策略
            </summary>
            <param name="maxRetryCount">最大重试次数</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy"/></returns>
        </member>
        <member name="M:Furion.Exception.Polly.Retry``1(System.UInt32)">
            <summary>
            初始化重试策略
            </summary>
            <typeparam name="TResult">操作返回值类型</typeparam>
            <param name="maxRetryCount">最大重试次数</param>
            <returns><see cref="T:Furion.Exception.RetryPolicy`1"/></returns>
        </member>
    </members>
</doc>
