<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Exception</name>
    </assembly>
    <members>
        <member name="T:Furion.Exception.IExceptionPolicy">
            <summary>
            异常策略接口
            </summary>
        </member>
        <member name="P:Furion.Exception.IExceptionPolicy.Condition">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:Furion.Exception.IExceptionPolicy.HandleExceptions">
            <summary>
            重试异常集合
            </summary>
        </member>
        <member name="M:Furion.Exception.IExceptionPolicy.Execute(System.Action)">
            <summary>
            同步方法
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:Furion.Exception.IExceptionPolicy.Execute``1(System.Func{``0})">
            <summary>
            同步带返回值
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Exception.IExceptionPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            异步方法
            </summary>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.Exception.IExceptionPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            异步带返回值
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="predicate"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Furion.Exception.AbstractExceptionPolicy">
            <summary>
            异常策略抽象基类
            </summary>
        </member>
        <member name="M:Furion.Exception.AbstractExceptionPolicy.#ctor(System.Type[])">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy" />
            </summary>
            <param name="handleExceptions">处理异常集合</param>
        </member>
        <member name="P:Furion.Exception.AbstractExceptionPolicy.Condition">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:Furion.Exception.AbstractExceptionPolicy.HandleExceptions">
            <summary>
            处理异常集合
            </summary>
        </member>
        <member name="M:Furion.Exception.AbstractExceptionPolicy.ShouldHandle(System.Exception)">
            <summary>
            检查是否需要处理异常
            </summary>
            <param name="exception"></param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="T:Furion.Exception.RetryPolicy">
            <summary>
            重试策略
            </summary>
        </member>
        <member name="F:Furion.Exception.RetryPolicy._defaultRetryInterval">
            <summary>
            默认重试间隔
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicy.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy" />
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicy.#ctor(System.Type[])">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy" />
            </summary>
            <param name="retryExceptions">重试异常集合</param>
        </member>
        <member name="P:Furion.Exception.RetryPolicy.MaxRetryCount">
            <summary>
            最大重试次数
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy.RetryIntervals">
            <summary>
            重试间隔集合
            </summary>
        </member>
        <member name="P:Furion.Exception.RetryPolicy.RetryAction">
            <summary>
            每次重试触发的回调
            </summary>
        </member>
        <member name="M:Furion.Exception.RetryPolicy.Execute(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Exception.RetryPolicy.Execute``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Exception.RetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Exception.RetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Furion.Exception.RetryPolicy`1">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`1.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`1"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`2">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`2.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`2"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`3">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`3.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`3"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`4">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException4"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`4.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`4"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`5">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException4"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException5"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`5.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`5"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`6">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException4"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException5"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException6"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`6.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`6"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`7">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException4"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException5"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException6"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException7"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`7.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`7"/>
            </summary>
        </member>
        <member name="T:Furion.Exception.RetryPolicy`8">
            <summary>
            重试策略
            </summary>
            <typeparam name="TException1"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException2"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException3"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException4"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException5"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException6"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException7"><see cref="T:System.Exception" /></typeparam>
            <typeparam name="TException8"><see cref="T:System.Exception" /></typeparam>
        </member>
        <member name="M:Furion.Exception.RetryPolicy`8.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Exception.RetryPolicy`8"/>
            </summary>
        </member>
    </members>
</doc>
