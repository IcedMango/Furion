<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Kit</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Http.HttpContextExtensions">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpContextExtensions.GetUrlAddress(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求对象 URL 地址
            </summary>
            <param name="httpRequest"><see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpContextExtensions.GetStatusText(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            获取响应对象状态文本
            </summary>
            <param name="httpResponse"><see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.KitEndpointRouteBuilderExtensions">
            <summary>
            Kit 模块 <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.KitEndpointRouteBuilderExtensions.MapGetSSE(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Delegate)">
            <summary>
            添加 SSE 请求终点路由
            </summary>
            <param name="endpoints"><see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/></param>
            <param name="pattern">路由模板</param>
            <param name="handler">处理程序</param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.RouteHandlerBuilder"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions">
            <summary>
            Kit 模块 <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions.UseKit(Microsoft.AspNetCore.Builder.WebApplication,System.Action{Furion.Kit.KitOptions})">
            <summary>
            添加 Kit 中间件
            </summary>
            <param name="webApplication"><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></param>
            <param name="configure"></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions.UseKit(Microsoft.AspNetCore.Builder.WebApplication,Furion.Kit.KitOptions)">
            <summary>
            添加 Kit 中间件
            </summary>
            <param name="webApplication"><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></param>
            <param name="kitOptions"></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
        <member name="T:Furion.Kit.Helpers">
            <summary>
            Kit 模块帮助类
            </summary>
        </member>
        <member name="M:Furion.Kit.Helpers.SplitCamelCase(System.String)">
            <summary>
            分割大驼峰字符串值
            </summary>
            <param name="str">字符串</param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Furion.Kit.Helpers.SplitCamelCaseRegex">
            <remarks>
            Pattern:<br/>
            <code>(?&lt;!^)([A-Z])</code><br/>
            Explanation:<br/>
            <code>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match if at the beginning of the string.<br/>
            ○ 1st capture group.<br/>
                ○ Match a character in the set [A-Z].<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Furion.Kit.DiagnosticListenerBase`1">
            <summary>
            诊断监听器抽象基类
            </summary>
            <typeparam name="TData">诊断订阅器数据类型</typeparam>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._lockObject">
            <summary>
            并发锁标识
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._diagnosticChannel">
            <summary>
            诊断订阅器通道
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._subscription">
            <summary>
            诊断订阅器引用
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._listenerSubscription">
            <summary>
            诊断观察者引用
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._listenerCategory">
            <summary>
            监听类别
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.#ctor(System.String,System.Int32)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.DiagnosticListenerBase`1" />
            </summary>
            <param name="listenerCategory">监听类别</param>
            <param name="capacity">诊断订阅器通道容量</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.Listening">
            <summary>
            开始观察
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.AddSubscription(System.Diagnostics.DiagnosticListener)">
            <summary>
            添加诊断订阅器
            </summary>
            <param name="diagnosticListener"><see cref="T:System.Diagnostics.DiagnosticListener"/></param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.OnSubscribe(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            订阅诊断通知信息
            </summary>
            <param name="data">通知信息</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.WriteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            将数据写入诊断订阅器通道
            </summary>
            <param name="data"><typeparamref name="TData"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            读取诊断订阅器通道数据
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.SSEHandler(Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            构建 SSE 请求处理程序
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.SerializeData(`0)">
            <summary>
            序列化诊断订阅器通道数据
            </summary>
            <param name="data"><typeparamref name="TData"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Furion.Kit.EndpointDiagnosticListener">
            <summary>
            终点路由诊断监听器
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointDiagnosticListener._endpointDiagnosticModelsCache">
            <summary>
            终点路由诊断模型缓存集合
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointDiagnosticListener._httpContextGetter">
            <summary>
            httpContext 属性值访问器
            </summary>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.#ctor(System.Int32)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointDiagnosticListener" />
            </summary>
            <param name="capacity">诊断订阅器通道容量</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.OnSubscribe(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.RoutingEndpointMatchedHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Routing.EndpointMatched 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.MvcAfterOnActionExecutedHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Mvc.AfterOnActionExecuted 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.HostingEndRequestHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Hosting.EndRequest 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="T:Furion.Kit.ControllerActionModel">
            <summary>
            控制器操作模型
            </summary>
        </member>
        <member name="F:Furion.Kit.ControllerActionModel._controllerActionDescriptor">
            <inheritdoc cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>
        </member>
        <member name="M:Furion.Kit.ControllerActionModel.#ctor(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.ControllerActionModel"/>
            </summary>
            <param name="controllerActionDescriptor"></param>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ControllerName">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ActionName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ControllerType">
            <summary>
            控制器类型
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.Signature">
            <summary>
            方法签名
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="M:Furion.Kit.ControllerActionModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Furion.Kit.EndpointDiagnosticModel">
            <summary>
            终点路由诊断模型
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointDiagnosticModel._httpContext">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.HttpContext" />
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticModel.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointDiagnosticModel"/>
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.TraceIdentifier">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.HttpMethod">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.UrlAddress">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.StatusText">
            <summary>
            状态文本
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.BeginTimestamp">
            <summary>
            开始时间戳
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.EndTimestamp">
            <summary>
            结束时间戳
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Query">
            <summary>
            URL 参数集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Cookies">
            <summary>
            客户端 Cookies 集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Headers">
            <summary>
            请求 Headers 集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.RouteValues">
            <summary>
            路由表集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Endpoint">
            <inheritdoc cref="T:Furion.Kit.EndpointModel"/>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Exception">
            <inheritdoc cref="T:Furion.Kit.ExceptionModel"/>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.ControllerAction">
            <inheritdoc cref="T:Furion.Kit.ControllerActionModel"/>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Furion.Kit.EndpointModel">
            <summary>
            终点路由模型
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointModel._endpoint">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.Endpoint"/>
        </member>
        <member name="M:Furion.Kit.EndpointModel.#ctor(Microsoft.AspNetCore.Http.Endpoint)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointModel"/>
            </summary>
            <param name="endpoint"><see cref="T:Microsoft.AspNetCore.Http.Endpoint"/></param>
        </member>
        <member name="P:Furion.Kit.EndpointModel.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.RoutePattern">
            <summary>
            路由格式
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.HttpMethods">
            <summary>
            请求方式集合
            </summary>
        </member>
        <member name="M:Furion.Kit.EndpointModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Furion.Kit.ExceptionModel">
            <summary>
            异常模型
            </summary>
        </member>
        <member name="F:Furion.Kit.ExceptionModel._exception">
            <inheritdoc cref="T:System.Exception"/>
        </member>
        <member name="M:Furion.Kit.ExceptionModel.#ctor(System.Exception)">
            <summary>
            <inheritdoc cref="T:System.Exception"/>
            </summary>
            <param name="exception"><see cref="T:System.Exception"/></param>
        </member>
        <member name="P:Furion.Kit.ExceptionModel.Message">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:Furion.Kit.ExceptionModel.StackTrace">
            <summary>
            异常堆栈
            </summary>
        </member>
        <member name="P:Furion.Kit.ExceptionModel.HResult">
            <summary>
            异常编码数字值
            </summary>
        </member>
        <member name="P:Furion.Kit.ExceptionModel.Source">
            <summary>
            异常对象名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ExceptionModel.HelpLink">
            <summary>
            帮助文件链接
            </summary>
        </member>
        <member name="M:Furion.Kit.ExceptionModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Furion.Kit.DiagnosticObserver`1">
            <summary>
            诊断观察者
            </summary>
            <typeparam name="T">通知信息类型</typeparam>
        </member>
        <member name="F:Furion.Kit.DiagnosticObserver`1._onNext">
            <summary>
            向观察者提供新数据
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticObserver`1._onCompleted">
            <summary>
            通知观察者推送已完成
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.#ctor(System.Action{`0},System.Action)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.DiagnosticObserver`1"/>
            </summary>
            <param name="onNext">向观察者提供新数据</param>
            <param name="onCompleted">通知观察者推送已完成</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnNext(`0)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnError(System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnCompleted">
            <inheritdoc />
        </member>
        <member name="T:Furion.Kit.KitOptions">
            <summary>
            Kit 模块选项
            </summary>
        </member>
        <member name="P:Furion.Kit.KitOptions.Root">
            <summary>
            根地址
            </summary>
        </member>
        <member name="P:Furion.Kit.KitOptions.Capacity">
            <summary>
            容量
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the SplitCamelCaseRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SplitCamelCaseRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
