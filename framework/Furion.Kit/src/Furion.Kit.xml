<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Kit</name>
    </assembly>
    <members>
        <member name="T:Furion.Kit.Constants">
            <summary>
            Kit 模块常量配置
            </summary>
        </member>
        <member name="F:Furion.Kit.Constants.ENVIRONMENT_NAME_KEY">
            <summary>
            运行环境名响应头 Key
            </summary>
        </member>
        <member name="F:Furion.Kit.Constants.PROJECT_NAME_KEY">
            <summary>
            项目名响应头 Key
            </summary>
        </member>
        <member name="T:Furion.Kit.KitEndpoints">
            <summary>
            Kit 模块终点路由配置
            </summary>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.Map(Microsoft.AspNetCore.Builder.WebApplication,Furion.Kit.KitOptions)">
            <summary>
            Kit 模块终点路由配置入口
            </summary>
            <param name="webApplication"><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></param>
            <param name="kitOptions"><see cref="T:Furion.Kit.KitOptions"/></param>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.EndpointDiagnosticHandler(Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            终点路由诊断处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.ConfigurationDiagnosticHandler(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            配置诊断路由处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="hostEnvironment"><see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.ConfigurationProviderDiagnosticHandler(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            配置提供器诊断路由处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.ComponentDiagnosticHandler(Microsoft.AspNetCore.Http.HttpContext,Furion.CoreOptions)">
            <summary>
            组件诊断路由处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="coreOptions"><see cref="T:Furion.CoreOptions"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Http.IResult"/></returns>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.CreateComponentModel(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Type[]})">
            <summary>
            创建组件模型
            </summary>
            <param name="componentType">组件类型</param>
            <param name="dependencies">组件依赖关系集合</param>
            <returns><see cref="T:Furion.Kit.ComponentModel"/></returns>
        </member>
        <member name="M:Furion.Kit.KitEndpoints.OpenApiHandler(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.JsonOptions})">
            <summary>
            开放接口处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="provider"><see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupCollectionProvider"/></param>
            <param name="jsonOptions"><see cref="T:Microsoft.Extensions.Options.IOptions`1"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Http.IResult"/></returns>
        </member>
        <member name="T:Furion.Kit.Helpers">
            <summary>
            Kit 模块帮助类
            </summary>
        </member>
        <member name="M:Furion.Kit.Helpers.SerializeObject(System.Object)">
            <summary>
            序列化对象
            </summary>
            <param name="data"><see cref="T:System.Object"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="T:Furion.Kit.DiagnosticListenerBase`1">
            <summary>
            诊断监听器抽象基类
            </summary>
            <typeparam name="TData">诊断数据通道数据类型</typeparam>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._lockObject">
            <summary>
            并发锁标识
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._diagnosticChannel">
            <summary>
            诊断数据通道
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._subscription">
            <summary>
            诊断订阅器引用
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._listenerSubscription">
            <summary>
            诊断观察者引用
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticListenerBase`1._listenerCategory">
            <summary>
            诊断监听类别
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.#ctor(System.String,System.Int32)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.DiagnosticListenerBase`1" />
            </summary>
            <param name="listenerCategory">诊断监听类别</param>
            <param name="capacity">诊断数据通道容量</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.Listening">
            <summary>
            开始监听
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.AddSubscription(System.Diagnostics.DiagnosticListener)">
            <summary>
            添加诊断订阅器
            </summary>
            <param name="diagnosticListener"><see cref="T:System.Diagnostics.DiagnosticListener"/></param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            监听生产者发布新消息
            </summary>
            <param name="data">通知信息</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.OnCompleted">
            <summary>
            监听生产者停止发送消息
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.WriteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            将数据写入诊断数据通道
            </summary>
            <param name="data"><typeparamref name="TData"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            读取诊断数据通道数据
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.BuildSSEEndpointRouteHandler(Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            构建 SSE 终点路由处理程序
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Furion.Kit.DiagnosticListenerBase`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Furion.Kit.EndpointDiagnosticListener">
            <summary>
            终点路由诊断监听器
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointDiagnosticListener._endpointDiagnosticModelsCache">
            <summary>
            终点路由诊断模型缓存集合
            </summary>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.#ctor(System.Int32)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointDiagnosticListener" />
            </summary>
            <param name="capacity">诊断数据通道容量</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.RoutingEndpointMatchedHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Routing.EndpointMatched 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.MvcAfterOnActionExecutedHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Mvc.AfterOnActionExecuted 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticListener.HostingHttpRequestInStopHandle(System.Object)">
            <summary>
            Microsoft.AspNetCore.Hosting.HttpRequestIn.Stop 事件处理
            </summary>
            <param name="value">事件负载值</param>
        </member>
        <member name="T:Furion.Kit.ComponentDiagnosticModel">
            <summary>
            组件诊断模型
            </summary>
        </member>
        <member name="M:Furion.Kit.ComponentDiagnosticModel.#ctor">
            <summary>
            <inheritdoc cref="T:Furion.Kit.ComponentDiagnosticModel"/>
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentDiagnosticModel.Components">
            <summary>
            入口组件模型集合
            </summary>
        </member>
        <member name="T:Furion.Kit.ComponentModel">
            <summary>
            组件模型
            </summary>
        </member>
        <member name="M:Furion.Kit.ComponentModel.#ctor(System.Type)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.ComponentModel"/>
            </summary>
            <param name="componentType">组件类型</param>
        </member>
        <member name="P:Furion.Kit.ComponentModel.Name">
            <summary>
            类型名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.FullName">
            <summary>
            完全限定类型名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.AssemblyName">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.AssemblyDescription">
            <summary>
            程序集描述
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.AssemblyVersion">
            <summary>
            程序集版本号
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.Unique">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Furion.Kit.ComponentModel.Dependencies">
            <summary>
            依赖组件集合
            </summary>
        </member>
        <member name="T:Furion.Kit.ControllerActionModel">
            <summary>
            控制器操作模型
            </summary>
        </member>
        <member name="M:Furion.Kit.ControllerActionModel.#ctor(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.ControllerActionModel"/>
            </summary>
            <param name="controllerActionDescriptor"><see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/></param>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ControllerType">
            <summary>
            控制器类型
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ControllerName">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.ActionName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.Signature">
            <summary>
            方法签名
            </summary>
        </member>
        <member name="P:Furion.Kit.ControllerActionModel.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="T:Furion.Kit.EndpointDiagnosticModel">
            <summary>
            终点路由诊断模型
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointDiagnosticModel._httpContext">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.HttpContext" />
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticModel.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointDiagnosticModel"/>
            </summary>
            <param name="httpContext"><see cref="T:Microsoft.AspNetCore.Http.HttpContext"/></param>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.TraceId">
            <summary>
            活动标识
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.TraceIdentifier">
            <summary>
            请求标识
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.HttpMethod">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Path">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.UrlAddress">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.RequestStartTime">
            <summary>
            请求开始时间
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Query">
            <summary>
            请求 URL 参数集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Cookies">
            <summary>
            请求 Cookies 集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.RequestHeaders">
            <summary>
            请求 Headers 集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.RouteValues">
            <summary>
            路由信息集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Endpoint">
            <inheritdoc cref="T:Furion.Kit.EndpointModel"/>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.ControllerAction">
            <inheritdoc cref="T:Furion.Kit.ControllerActionModel"/>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.RequestEndTime">
            <summary>
            请求结束时间
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.StatusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.StatusText">
            <summary>
            状态文本
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.ResponseHeaders">
            <summary>
            响应 Headers 集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Filters">
            <summary>
            筛选器集合
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointDiagnosticModel.Exception">
            <inheritdoc cref="T:Furion.Exception.ExceptionModel"/>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Furion.Kit.EndpointDiagnosticModel.SyncResponseData(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            同步响应数据
            </summary>
            <param name="httpResponse"><see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/></param>
        </member>
        <member name="T:Furion.Kit.EndpointModel">
            <summary>
            终点路由模型
            </summary>
        </member>
        <member name="F:Furion.Kit.EndpointModel._endpoint">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.Endpoint"/>
        </member>
        <member name="M:Furion.Kit.EndpointModel.#ctor(Microsoft.AspNetCore.Http.Endpoint)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.EndpointModel"/>
            </summary>
            <param name="endpoint"><see cref="T:Microsoft.AspNetCore.Http.Endpoint"/></param>
        </member>
        <member name="P:Furion.Kit.EndpointModel.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.RoutePattern">
            <summary>
            路由样本
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Furion.Kit.EndpointModel.HttpMethods">
            <summary>
            受支持的请求方式
            </summary>
        </member>
        <member name="M:Furion.Kit.EndpointModel.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Furion.Kit.DiagnosticObserver`1">
            <summary>
            诊断观察者
            </summary>
            <typeparam name="T">通知信息类型</typeparam>
        </member>
        <member name="F:Furion.Kit.DiagnosticObserver`1._onNext">
            <summary>
            生产者发布新消息处理委托
            </summary>
        </member>
        <member name="F:Furion.Kit.DiagnosticObserver`1._onCompleted">
            <summary>
            生产者停止发送消息处理委托
            </summary>
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.#ctor(System.Action{`0},System.Action)">
            <summary>
            <inheritdoc cref="T:Furion.Kit.DiagnosticObserver`1"/>
            </summary>
            <param name="onNext">生产者发布新消息处理委托</param>
            <param name="onCompleted">生产者停止发送消息处理委托</param>
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnNext(`0)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnError(System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Furion.Kit.DiagnosticObserver`1.OnCompleted">
            <inheritdoc />
        </member>
        <member name="T:Furion.Kit.KitOptions">
            <summary>
            Kit 模块选项
            </summary>
        </member>
        <member name="P:Furion.Kit.KitOptions.Root">
            <summary>
            入口地址
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpContextExtensions">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpContextExtensions.WriteAsJsonAsync(Microsoft.AspNetCore.Http.HttpResponse,System.String)">
            <summary>
            向响应流中写入 JSON 字符串
            </summary>
            <param name="httpResponse"><see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/></param>
            <param name="output">JSON 字符串</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions">
            <summary>
            Kit 模块 <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions.UseKit(Microsoft.AspNetCore.Builder.WebApplication,System.Action{Furion.Kit.KitOptions})">
            <summary>
            添加 Kit 模块中间件
            </summary>
            <param name="webApplication"><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></param>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.KitWebApplicationExtensions.UseKit(Microsoft.AspNetCore.Builder.WebApplication,Furion.Kit.KitOptions)">
            <summary>
            添加 Kit 模块中间件
            </summary>
            <param name="webApplication"><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></param>
            <param name="kitOptions"><see cref="T:Furion.Kit.KitOptions"/></param>
            <returns><see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
    </members>
</doc>
