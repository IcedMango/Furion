<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Configuration</name>
    </assembly>
    <members>
        <member name="T:Furion.Configuration.FileScannerConfigurationBuilder">
            <summary>
            配置模块文件扫描器构建器
            </summary>
        </member>
        <member name="F:Furion.Configuration.FileScannerConfigurationBuilder._directories">
            <summary>
            待扫描的目录集合
            </summary>
        </member>
        <member name="F:Furion.Configuration.FileScannerConfigurationBuilder._fileGlobbing">
            <summary>
            文件通配符
            </summary>
        </member>
        <member name="F:Furion.Configuration.FileScannerConfigurationBuilder._fileBlacklistGlobbing">
            <summary>
            文件黑名单通配符
            </summary>
            <remarks>禁止已扫描的文件名作为配置文件</remarks>
        </member>
        <member name="F:Furion.Configuration.FileScannerConfigurationBuilder._fileConfigurationSources">
            <summary>
            文件配置程序
            </summary>
        </member>
        <member name="F:Furion.Configuration.FileScannerConfigurationBuilder._filterConfigure">
            <summary>
            文件配置模型过滤器
            </summary>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileScannerConfigurationBuilder.MaxDepth">
            <summary>
            文件扫描最大深度
            </summary>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddFilter(System.Func{Furion.Configuration.FileConfigurationModel,System.Boolean})">
            <summary>
            添加文件扫描过滤器
            </summary>
            <param name="configure"><see cref="T:System.Func`2"/></param>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddDirectories(System.String[])">
            <summary>
            添加文件扫描的目录
            </summary>
            <param name="directories"><see cref="T:System.String"/>[]</param>
            <returns><see cref="T:Furion.Configuration.FileScannerConfigurationBuilder"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddDirectories(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加文件扫描的目录
            </summary>
            <param name="directories"><see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <returns><see cref="T:Furion.Configuration.FileScannerConfigurationBuilder"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddGlobbings(System.String[])">
            <summary>
            添加文件通配符
            </summary>
            <param name="globbings"><see cref="T:System.String"/>[]</param>
            <returns><see cref="T:Furion.Configuration.FileScannerConfigurationBuilder"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddGlobbings(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加文件通配符
            </summary>
            <param name="globbings"><see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <returns><see cref="T:Furion.Configuration.FileScannerConfigurationBuilder"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            构建模块服务
            </summary>
            <param name="builder"><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></param>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.Release">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.ScanDirectories(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            扫描所有配置文件目录
            </summary>
            <returns><see cref="T:System.Collections.Generic.HashSet`1"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.AddFileConfigurationSource(Microsoft.Extensions.Configuration.IConfigurationBuilder,Furion.Configuration.FileConfigurationModel)">
            <summary>
            添加文件配置提供程序
            </summary>
            <param name="builder"><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></param>
            <param name="model"><see cref="T:Furion.Configuration.FileConfigurationModel"/></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Furion.Configuration.FileScannerConfigurationBuilder.ScanDirectory(System.String,System.UInt32,Microsoft.Extensions.FileSystemGlobbing.Matcher)">
            <summary>
            执行目录扫描，返回符合匹配条件的文件路径列表
            </summary>
            <param name="folderPath">要扫描的目录路径</param>
            <param name="maxDepth">文件扫描的最大深度，默认 0</param>
            <param name="matcher">可选的文件通配符匹配对象</param>
            <returns><see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="T:Furion.Configuration.FileConfigurationModel">
            <summary>
            文件配置模型
            </summary>
            <remarks>作用于配置文件扫描</remarks>
        </member>
        <member name="M:Furion.Configuration.FileConfigurationModel.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">文件绝对路径</param>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.FilePath">
            <summary>
            文件绝对路径
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.Extension">
            <summary>
            拓展名
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.DirectoryName">
            <summary>
            文件目录名
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.Group">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.Optional">
            <summary>
            文件可选配置
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.ReloadOnChange">
            <summary>
            文件变更时刷新
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.ReloadDelay">
            <summary>
            文件变更延迟刷新毫秒数
            </summary>
        </member>
        <member name="P:Furion.Configuration.FileConfigurationModel.Order">
            <summary>
            排序
            </summary>
            <remarks>值越大则越后添加</remarks>
        </member>
        <member name="M:Furion.Configuration.FileConfigurationModel.ResolveGroup(System.String)">
            <summary>
            解析文件分组
            </summary>
            <remarks>若文件名包含 () 则使用其之间内容作为分组名，否则取第一个 . 前面的字符作为分组名</remarks>
            <param name="fileName">文件名</param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Furion.Configuration.FileConfigurationModel.ToString">
            <inheritdoc />
        </member>
        <member name="T:Furion.Component.ConfigurationComponent">
            <summary>
            配置模块服务组件
            </summary>
        </member>
        <member name="P:Furion.Component.ConfigurationComponent.Props">
            <summary>
            组件配置
            </summary>
        </member>
        <member name="M:Furion.Component.ConfigurationComponent.ConfigureServices(Furion.Component.ServiceComponentContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Configuration.FileScannerConfigurationBuilderExtensions">
            <summary>
            配置模块 <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileScannerConfigurationBuilderExtensions.AddFileScanner(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Furion.Configuration.FileScannerConfigurationBuilder})">
            <summary>
            添加配置模块文件扫描器服务
            </summary>
            <param name="builder"><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></param>
            <param name="configure">自定义配置委托</param>
            <returns><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileScannerConfigurationBuilderExtensions.AddFileScanner(Microsoft.Extensions.Configuration.IConfigurationBuilder,Furion.Configuration.FileScannerConfigurationBuilder)">
            <summary>
            添加配置模块文件扫描器服务
            </summary>
            <param name="builder"><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></param>
            <param name="fileScannerConfigurationBuilder"><see cref="T:Furion.Configuration.FileScannerConfigurationBuilder"/></param>
            <returns><see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/></returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationExtensions">
            <summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> 拓展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationExtensions.Exists(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            判断配置节点是否存在
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">节点路径</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationExtensions.Get``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            获取配置节点并转换成指定类型
            </summary>
            <typeparam name="T">节点类型</typeparam>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">节点路径</param>
            <returns><typeparamref name="T"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationExtensions.Get``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
            <summary>
            获取配置节点并转换成指定类型
            </summary>
            <typeparam name="T">节点类型</typeparam>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">节点路径</param>
            <param name="configureOptions">配置值绑定到指定类型额外配置</param>
            <returns><typeparamref name="T"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationExtensions.Get(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Type)">
            <summary>
            获取节点配置
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">节点路径</param>
            <param name="type">节点类型</param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationExtensions.Get(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Type,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
            <summary>
            获取节点配置
            </summary>
            <param name="configuration"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">节点路径</param>
            <param name="type">节点类型</param>
            <param name="configureOptions">配置值绑定到指定类型额外配置</param>
            <returns><see cref="T:System.Object"/></returns>
        </member>
    </members>
</doc>
